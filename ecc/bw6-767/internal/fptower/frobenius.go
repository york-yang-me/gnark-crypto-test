// Copyright 2020 ConsenSys AG
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fptower

import (
	"github.com/consensys/gnark-crypto/ecc/bw6-767/fp"
)

var _frobA = fp.Element{
	15655492634539912179,
	15625523547429265730,
	16335314831391762724,
	13518000408713276545,
	10783103193317232651,
	9240951999342615607,
	14022433073199597937,
	14995118778810930047,
	11548304774969668068,
	1922028256836482007,
	1103229352025999297,
	2049110991795868957,
}
var _frobB = fp.Element{
	14490102141828855721,
	1155665167495797154,
	16364336910677748220,
	3987568446487760110,
	7104036771337998170,
	17326770666997356588,
	3800147805627963897,
	14510510510668476021,
	2566898110073421440,
	17512992216300045617,
	15080027745386594961,
	3106089778421632875,
}
var _frobC = fp.Element{
	11493040625972887870,
	3039632011235468566,
	5645634080121793228,
	5000509785739886957,
	11202806275107973247,
	16985276110151963884,
	655497414078926560,
	11312640885410927112,
	961902611187350936,
	15015879012548413713,
	7412530602676105218,
	2794396432560130486,
}
var _frobAC = fp.Element{
	11698850702659216284,
	16781188714925062885,
	14252907668359959328,
	17505568855201036656,
	17887139964655230821,
	8120978592630420579,
	17822580878827561835,
	11058885215769854452,
	14115202885043089509,
	988276399426976008,
	16183257097412594259,
	5155200770217501832,
}
var _frobBC = fp.Element{
	10327650133261831412,
	7016517705011551606,
	5674656159407778723,
	13916821897223922138,
	7523739853128738765,
	6624350704097153249,
	8879956220216844137,
	10828032617268473085,
	10427240020000655924,
	12160098898302425706,
	2942584922327149267,
	3851375219185894405,
}

// Frobenius set z in E6 to x^q, return z
func (z *E6) Frobenius(x *E6) *E6 {
	z.B0.A0 = x.B0.A0
	z.B0.A1.Mul(&x.B0.A1, &_frobA)
	z.B0.A2.Mul(&x.B0.A2, &_frobB)

	z.B1.A0.Mul(&x.B1.A0, &_frobC)
	z.B1.A1.Mul(&x.B1.A1, &_frobAC)
	z.B1.A2.Mul(&x.B1.A2, &_frobBC)

	return z
}

// FrobeniusQuad set z in E6 to x^(q^4), return z
func (z *E6) FrobeniusQuad(x *E6) *E6 {
	z.Conjugate(x).Frobenius(z)

	return z
}
